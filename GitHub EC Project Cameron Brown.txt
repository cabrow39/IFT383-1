Cameron Brown
2/28/2020


                                Python Study Tool


I used Python 3 to create a study tool. Similar to flashcards mostly using dictionaries. Simply put this script reads data from a csv file supplied by the user to quiz them on the material they need to learn or memorize. The first column of the csv file will hold the keys while the seconds column will hold their respective values. For my testing and examples I picked four different animals for the keys and wrote a short description of them for the values. My script loops randomly through the dictionary created and displays the description of one of the animals. The user then enters which animal they think it is. The script will tell them if they were correct, adding 1 to their score and popping that animal from the dictionary. If they are incorrect it tells them the correct answer, does not increase their score, and does not pop that animal. After the script has asked every question in the csv file it will tell the users their score. If the user did not get every question correct it will randomly loop back through the csv file asking them the remaining animals that were not popped from the dictionary. This is repeated until the user gets every question correct. It will then tell them they got a perfect score and end the script. 
I believe this script to be useful for any kind of studying that requires repetitive memorization whether math formulas, history, science, or learning new things for a job. It runs quickly and does not have any useless distractions and is certainly easier to use than writing everything down on flash cards and flipping through them over and over. It focuses on helping you get the definitions you missed down without repeating what you already know.
The process I took to write this script was pretty simple. I first used the python file reading command lines to read the given csv file into a dictionary. I ran into a problem where the first key had strange symbols in front of it but solved the problem by adding “encoding='utf-8-sig'” to the f=open line allowing the reader to use the correct format when reading the csv file. I then built the for loop that would randomly go through the dictionary spitting out definitions. The for loop “for key in random.sample(list(Word.keys()),len(Word)):” was the most important part of my script and is used several times.  The rest of my script was built through testing and different logic using if,while, and for loops .
One problem I ran into was how to make sure the script would loop back through the wrong answers until they were correct. I first thought of sending them to a new list or dictionary that would then be looped through but after having many problems with that idea and wasting much time trying to solve them. I realized I could just pop the right answers out of the dictionary which saved me a ton of time and repetitive scripting. So that would be the advice I would have given myself before I started.